h3 Current data (#{formatter.tFormat(current_market.time)})
- if (current_market.error)
  p(class="error")= current_market.error
table.table.table-striped
  tr
    th Last
    th High
    th Threshold
    th Middle
    th Low
    th Spread
  tr
    td#current-last-price= current_market.last.toFixed(2)
    td= current_market.high.toFixed(2)
    td= current_market.threshold.toFixed(2)
    td= current_market.middle.toFixed(2)
    td= current_market.low.toFixed(2)
    td= (current_market.spread*100).toFixed(2)+"%"
- if (current_market.simulation_progress)
  #live-simulation-progress
    - if (sim_control && sim_control.real_time)
      h4 Simulation speed (#{sim_control.interval_multiplier.toFixed(2)}x)
      .simulation-speed-control.btn-group(role="group", aria-label="Control simulation speed")
        button.btn.btn-default.simulation-speed-button(type="button", data-vector="-1")
          span.glyphicon.glyphicon-backward(aria-hidden="true", aria-label="Slow down simulation")
        button.btn.btn-default.simulation-speed-button(type="button", data-vector="0")
          span.glyphicon.glyphicon-eject(aria-hidden="true", aria-label="Default simulation speed")
        button.btn.btn-default.simulation-speed-button(type="button", data-vector="1")
          span.glyphicon.glyphicon-forward(aria-hidden="true", aria-label="Fasten simulation")
    - else
      h4 Simulation progress
      .progress
        - var progress_perc = parseInt(current_market.simulation_progress * 100)
        .progress-bar(role="progressbar", aria-valuenow="#{progress_perc}", aria-valuemin="0", aria-valuemax="100", style="width: #{progress_perc}%") #{progress_perc}%
    .spacer
