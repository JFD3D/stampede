h3 Money
- if (current_wallet.error)
  p(class="error")= current_wallet.error

table.table.table-striped
  tr
    th Currency
    th Balance
    th Available
    th Reserved
    th Managed
  tr
    td= helpers.current_currency.toUpperCase()
    td= (current_wallet[helpers.current_currency+"_balance"] || 0).toFixed(2)
    td= (current_wallet[helpers.current_currency+"_available"] || 0).toFixed(2)
    td= (current_wallet[helpers.current_currency+"_reserved"] || 0).toFixed(2)
    td= (current_wallet.available_to_traders || 0).toFixed(2)
  tr
    td= "BTC"
    td= (current_wallet.btc_balance || 0).toFixed(2)
    td= (current_wallet.btc_available || 0).toFixed(2)
    td= (current_wallet.btc_reserved || 0).toFixed(2)
    td= (current_wallet.btc_amount_managed || 0).toFixed(4)
h3 Calculations
table.table.table-striped
  tr
    th Cool
    th Anxiety
    th Greed
    th Av. buy price
    th #{helpers.current_currency.toUpperCase()} available
    th #{helpers.current_currency.toUpperCase()} value
  tr
    td= parseInt((current_wallet.cool||0)*100) + "%"
    td= parseFloat((current_wallet.anxiety||0)*100).toFixed(3) + "%"
    td= parseFloat((current_wallet.greed||0)*100).toFixed(3) + "%"
    td= (current_wallet.average_buy_price || 0).toFixed(2)
    td= (current_wallet.available_to_traders || 0).toFixed(2)
    td= (current_wallet.currency_value || 0).toFixed(2)

h3 Information
table.table.table-striped
  tr
    th Initial investment
    th Fee
    th Updated at
  tr
    td= (current_wallet.initial_investment || 0).toFixed(2)
    td= parseFloat(current_wallet.fee || 0)+"%"
    td= formatter.tFormat(current_wallet.time)
